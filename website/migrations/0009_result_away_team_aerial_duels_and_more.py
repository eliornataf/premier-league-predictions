# Generated by Django 4.2.4 on 2023-09-10 19:57

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("website", "0008_fixture_season_end_year"),
    ]

    operations = [
        migrations.AddField(
            model_name="result",
            name="away_team_aerial_duels",
            field=models.FloatField(
                default=1,
                help_text="The percentage of successful aerial duels that the away team won.",
                validators=[
                    django.core.validators.MinValueValidator(0),
                    django.core.validators.MaxValueValidator(100),
                ],
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="result",
            name="away_team_clear_cut_chances",
            field=models.IntegerField(
                default=1,
                help_text="The number of clear-cut chances for the away team.",
                validators=[django.core.validators.MinValueValidator(0)],
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="result",
            name="away_team_corners",
            field=models.IntegerField(
                default=1,
                help_text="The number of corners won by the away team.",
                validators=[django.core.validators.MinValueValidator(0)],
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="result",
            name="away_team_fouls_committed",
            field=models.IntegerField(
                default=1,
                help_text="The number of fouls committed by the away team.",
                validators=[django.core.validators.MinValueValidator(0)],
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="result",
            name="away_team_fouls_won",
            field=models.IntegerField(
                default=1,
                help_text="The number of fouls won by the away team.",
                validators=[django.core.validators.MinValueValidator(0)],
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="result",
            name="away_team_goal_scorers",
            field=models.TextField(
                default=1, help_text="The player(s) who scored for the away team."
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="result",
            name="away_team_offsides",
            field=models.IntegerField(
                default=1,
                help_text="The number of times the away team was caught offside.",
                validators=[django.core.validators.MinValueValidator(0)],
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="result",
            name="away_team_passing",
            field=models.FloatField(
                default=1,
                help_text="The percentage of passes that arrived at their destination for the away team.",
                validators=[
                    django.core.validators.MinValueValidator(0),
                    django.core.validators.MaxValueValidator(100),
                ],
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="result",
            name="away_team_possession",
            field=models.FloatField(
                default=1,
                help_text="The away team's possession percentage.",
                validators=[
                    django.core.validators.MinValueValidator(0),
                    django.core.validators.MaxValueValidator(100),
                ],
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="result",
            name="away_team_red_cards",
            field=models.IntegerField(
                default=1,
                help_text="The number of red cards received by the away team.",
                validators=[django.core.validators.MinValueValidator(0)],
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="result",
            name="away_team_shots",
            field=models.IntegerField(
                default=1,
                help_text="The number of shots taken by the away team.",
                validators=[django.core.validators.MinValueValidator(0)],
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="result",
            name="away_team_shots_blocked",
            field=models.IntegerField(
                default=1,
                help_text="The number of blocked shots taken by the away team.",
                validators=[django.core.validators.MinValueValidator(0)],
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="result",
            name="away_team_shots_off_target",
            field=models.IntegerField(
                default=1,
                help_text="The number of shots off target taken by the away team.",
                validators=[django.core.validators.MinValueValidator(0)],
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="result",
            name="away_team_shots_on_target",
            field=models.IntegerField(
                default=1,
                help_text="The number of shots on target taken by the away team.",
                validators=[django.core.validators.MinValueValidator(0)],
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="result",
            name="away_team_tackles",
            field=models.FloatField(
                default=1,
                help_text="The percentage of successful tackles for the away team.",
                validators=[
                    django.core.validators.MinValueValidator(0),
                    django.core.validators.MaxValueValidator(100),
                ],
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="result",
            name="away_team_yellow_cards",
            field=models.IntegerField(
                default=1,
                help_text="The number of yellow cards received by the away team.",
                validators=[django.core.validators.MinValueValidator(0)],
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="result",
            name="home_team_aerial_duels",
            field=models.FloatField(
                default=1,
                help_text="The percentage of successful aerial duels that the home team won.",
                validators=[
                    django.core.validators.MinValueValidator(0),
                    django.core.validators.MaxValueValidator(100),
                ],
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="result",
            name="home_team_clear_cut_chances",
            field=models.IntegerField(
                default=1,
                help_text="The number of clear-cut chances for the home team.",
                validators=[django.core.validators.MinValueValidator(0)],
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="result",
            name="home_team_corners",
            field=models.IntegerField(
                default=1,
                help_text="The number of corners won by the home team.",
                validators=[django.core.validators.MinValueValidator(0)],
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="result",
            name="home_team_fouls_committed",
            field=models.IntegerField(
                default=1,
                help_text="The number of fouls committed by the home team.",
                validators=[django.core.validators.MinValueValidator(0)],
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="result",
            name="home_team_fouls_won",
            field=models.IntegerField(
                default=1,
                help_text="The number of fouls won by the home team.",
                validators=[django.core.validators.MinValueValidator(0)],
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="result",
            name="home_team_goal_scorers",
            field=models.TextField(
                default=1, help_text="The player(s) who scored for the home team."
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="result",
            name="home_team_offsides",
            field=models.IntegerField(
                default=1,
                help_text="The number of times the home team was caught offside.",
                validators=[django.core.validators.MinValueValidator(0)],
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="result",
            name="home_team_passing",
            field=models.FloatField(
                default=1,
                help_text="The percentage of passes that arrived at their destination for the home team.",
                validators=[
                    django.core.validators.MinValueValidator(0),
                    django.core.validators.MaxValueValidator(100),
                ],
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="result",
            name="home_team_possession",
            field=models.FloatField(
                default=1,
                help_text="The home team's possession percentage.",
                validators=[
                    django.core.validators.MinValueValidator(0),
                    django.core.validators.MaxValueValidator(100),
                ],
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="result",
            name="home_team_red_cards",
            field=models.IntegerField(
                default=1,
                help_text="The number of red cards received by the home team.",
                validators=[django.core.validators.MinValueValidator(0)],
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="result",
            name="home_team_shots",
            field=models.IntegerField(
                default=1,
                help_text="The number of shots taken by the home team.",
                validators=[django.core.validators.MinValueValidator(0)],
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="result",
            name="home_team_shots_blocked",
            field=models.IntegerField(
                default=1,
                help_text="The number of blocked shots taken by the home team.",
                validators=[django.core.validators.MinValueValidator(0)],
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="result",
            name="home_team_shots_off_target",
            field=models.IntegerField(
                default=1,
                help_text="The number of shots off target taken by the home team.",
                validators=[django.core.validators.MinValueValidator(0)],
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="result",
            name="home_team_shots_on_target",
            field=models.IntegerField(
                default=1,
                help_text="The number of shots on target taken by the home team.",
                validators=[django.core.validators.MinValueValidator(0)],
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="result",
            name="home_team_tackles",
            field=models.FloatField(
                default=1,
                help_text="The percentage of successful tackles for the home team.",
                validators=[
                    django.core.validators.MinValueValidator(0),
                    django.core.validators.MaxValueValidator(100),
                ],
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="result",
            name="home_team_yellow_cards",
            field=models.IntegerField(
                default=1,
                help_text="The number of yellow cards received by the home team.",
                validators=[django.core.validators.MinValueValidator(0)],
            ),
            preserve_default=False,
        ),
    ]
